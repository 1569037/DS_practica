@startuml
abstract Observable{

}

interface Observer{
+ update(o : Observable, arg : Object)
}

abstract Item{
- name : String
- initTime : DateTime
- endTime : DateTime
- totalTIme : DateTime
- active : boolean
}


class Project{
+ createNewTask(name : String)
+ createNewProject(name : String)
+ getTotalTime() : DateTime
}

class Task{
+ startInterval()
+ addSeconds(int seconds)
}

class Interval{
- initTime : DateTime
- endTime : DateTime
+ draw()
+ update(o : Observable, arg : Object)
}

class ClockTimer{
- timer : Timer
- dateTime : DateTime
+ startTime()
+ tick()
}

Item <|--- Project
Item <|--- Task
Item "*"<---*"1" Project
Interval "*"<---*"1" Task
Observer <|.. Interval
Observable <|-- ClockTimer
@enduml